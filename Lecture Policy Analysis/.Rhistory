setwd("~/eco590_Data_Analysis_Python_R/Data Cleaning")
library(here)
library(here)
library(tidyverse)
#library(here)
library(scales)
library(broom)
library(modelr)
library(tidyverse)
library(tidyverse)
library(lubridate)
theme_set(theme_bw())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(scales)
library(broom)
library(modelr)
library(tidyverse)
setwd("~/coursework")
library(here)
library(scales)
library(broom)
library(modelr)
library(tidyverse)
install.packages("tidyverse")
#library(here)
library(scales)
library(broom)
library(modelr)
library(tidyverse)
library(tidyverse)
setwd("C:\Users\Gabrielle Martinez\Documents\eco590_Data_Analysis_Python_R\ECO400 data")
setwd("C:\Users\Gabrielle Martinez\Documents\eco590_Data_Analysis_Python_R\ECO400 data")
setwd("C:/Users/Gabrielle Martinez/Documents/eco590_Data_Analysis_Python_R/ECO400 data")
#load data
data <- read.csv("us_firms_1970_no_dupes.csv")
#load data
firms <- read.csv("us_firms_1970_no_dupes.csv")
rm(data)
View(firms)
firms %>% group_by(assignee_country)
firms %>% group_by(assignee_country) %>% summarise(count = n)
firms %>% group_by(assignee_country) %>% count()
firms %>% group_by(assignee_name) %>% count()
firms %>% group_by(assignee_name) %>% count() %>% summarise()
firms %>% group_by(assignee_name) %>% count() %>% nrow()
usfirm = firms
firms <- read.csv("totalpats1970.csv")
firms %>% group_by(assignee_name) %>% count() %>% nrow()
firms %>% group_by(assignee_country) %>% count() #%>% nrow()
firms %>% group_by(assignee_country) %>% count() %>% nrow()
firms %>% group_by(assignee_country) %>% count() %>% sort(n) %>% nrow() #111 countries
library(tidyverse)
setwd("
firms <- read.csv("totalpats1970.csv")
firms %>% group_by(assignee_name) %>% count() %>% nrow() #3665 firms total
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% sort(count) %>% nrow() #111 countries
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% sort(count, T) %>% nrow() #111 countries
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% order(T) %>% nrow() #111 countries
firms %>% group_by(assignee_country) %>% summarise(count= n())
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% order(count,T) %>% nrow() #111 countries
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% order(count,T) #111 countries
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% arrange(count) #111 countries
firms %>% group_by(assignee_country) %>% summarise(count= n()) %>% arrange(desc(count)) #111 countries
firms %>% group_by(assignee_country) %>% #111 countries
summarise(count= n()) %>%
arrange(desc(count)) -> countries
View(countries)
library(tidyverse)
setwd("C:/Users/Gabrielle Martinez/Documents/eco590_Data_Analysis_Python_R/ECO400 data")
#taking a look at the data
firms <- read.csv("totalpats1970.csv")
firms %>
firms <- read.csv("totalpats1970.csv")
firms %>% group_by(assignee_name) %>% count() %>% nrow() #3665 firms total
library(tidyverse)
library(MatchIt) #This one helps, well, do the matching.
#don't forget to i
setwd("~/eco585 econometrics/Lecture Policy Analysis")
ecls <- read.csv("ecls.csv")
with(ecls, t.test(c5r2mtsc_std ~ catholic))
ecls %>%
group_by(catholic) %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select('race_') %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select(race_) %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select('race_'+'.') %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select(c('race_'+'.')) %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select(grepl( "ABC" , names( ecls ) )) %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select(grepl( "race" , names( ecls ) )) %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select(starts_with("race")) %>%
summarise(mean(.))
ecls %>%
group_by(catholic) %>%
select(starts_with("race")) %>%
mean()
ecls %>%
group_by(catholic) %>%
select(starts_with("race")) %>%
n()
ecls %>%
group_by(catholic) %>%
select(starts_with("race")) %>%
summarise(count = n())
select() %>%
ecls %>%
group_by(catholic,starts_with("race")) %>%
summarise(count = n())
ecls %>%
group_by(catholic,starts_with("race")) %>%
summarise(count = n())
ecls %>%
group_by(catholic) %>%
summarise(n_students = n(),
mean_math = mean(c5r2mtsc_std),
std_error = sd(c5r2mtsc_std) / sqrt(n_students))
lapply(ecls_cov, function(v) {
t.test(ecls[, v] ~ ecls[, 'catholic'])
})
ecls_cov <- c('race_white', 'p5hmage', 'w3income', 'p5numpla', 'w3momed_hsb')
ecls %>%
group_by(catholic) %>%
select(one_of(ecls_cov)) %>%
summarise_all(funs(mean(., na.rm = T)))
with(ecls, t.test(race_white ~ catholic)) #(repeat for each covariate)
with(ecls, t.test(p5hmage ~ catholic))
with(ecls, t.test(w3income ~ catholic))
with(ecls, t.test(p5numpla ~ catholic))
with(ecls, t.test(w3momed_hsb ~ catholic))
lapply(ecls_cov, function(v) {
t.test(ecls[, v] ~ ecls[, 'catholic'])
})
for(x in ecls_cov){
t.test(ecls[, x] ~ ecls[, 'catholic'])
}
print(t.test(ecls[, x] ~ ecls[, 'catholic']))
welch<-c()
welch[which(x)] <-  t.test(ecls[, x] ~ ecls[, 'catholic'])
welch <-  t.test(ecls[, x] ~ ecls[, 'catholic'])
welch<-c()
for(x in ecls_cov){
welch <-  t.test(ecls[, x] ~ ecls[, 'catholic'])
}
for(i in welch){
print(i)
}
ecls <- ecls %>% mutate(w3income_1k = w3income / 1000)
#we'll divide income by 1000 to have "lower numbers", just remember this in the interpretation. It helps deal with potential heteroskedasticity issues.
m_ps <- glm(catholic ~ race_white + w3income_1k + p5hmage + p5numpla + w3momed_hsb,
family = binomial(), data = ecls)
summary(m_ps)
ecls <- ecls %>% mutate(w3income_1k = w3income / 1000)
#we'll divide income by 1000 to have "lower numbers", just remember this in the interpretation. It helps deal with potential heteroskedasticity issues.
m_ps <- glm(catholic ~ race_white + log(w3income_1k) + p5hmage + p5numpla + w3momed_hsb,
family = binomial(), data = ecls)
summary(m_ps)
View(welch)
View(m_ps)
prs_df <- data.frame(pr_score = predict(m_ps, type = "response"),
catholic = m_ps$model$catholic)
head(prs_df)
View(prs_df)
ecls %>%
mutate(pr_score = predict(ms_ps, type = "response")) %>% head()
ecls <- ecls %>% mutate(w3income_1k = w3income / 1000)
#we'll divide income by 1000 to have "lower numbers", just remember this in the interpretation. It helps deal with potential heteroskedasticity issues.
m_ps <- glm(catholic ~ race_white + log(w3income_1k) + p5hmage + p5numpla + w3momed_hsb,
family = binomial(), data = ecls)
summary(m_ps)
ecls %>%
mutate(pr_score = predict(m_ps, type = "response")) %>% head()
prs_df <- data.frame(pr_score = predict(m_ps, type = "response"),
catholic = m_ps$model$catholic)
head(prs_df)
